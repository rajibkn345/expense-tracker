{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseLists.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","bool","setBool","expense","id","Math","random","toString","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpenseList","items","length","map","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","ExpenseChart","ExpenseLists","dummyExpenses","App","setExpenses","expenseItem","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2fd428eb.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n/*  const [userInput, setUserInput] = useState({enteredTitle: \"\",\nenteredAmount: \"\", enteredDate: \"\"});*/\nconst [enteredTitle, setEnteredTitle] = useState('');\nconst [enteredAmount, setEnteredAmount] = useState('');\nconst [enteredDate, setEnteredDate] = useState('');\n  \n\n  const titleChangeHandler = (event) => {\n  setEnteredTitle(event.target.value); \n  \n};\n\n\n  const amountChangeHandler = (event) => {\n    //setEnteredAmount(event.target.value);\n    /* setUserInput({\n      ...userInput,\n      enteredAmount: event.target.value\n    }) */\n    setEnteredAmount(event.target.value);\n   };\n\n  const dateChangeHandler = (event) => {\n    //setEnteredDate(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: event.target.value\n    // })\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event)=>{\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n\n  } \n  const cancelHandler = ()=>{\n    props.onCancel(true);\n  };\n\n  return (\n    <form onSubmit={submitHandler} >\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label>Title</label>\n          <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\n        </div>\n        <div className='new-expense__control'>\n          <label>Amount</label>\n          <input\n            type='number'\n            min='0.01'\n            step='0.01'\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className='new-expense__control'>\n          <label>Date</label>\n          <input\n            type='date'\n            min='2019-01-01'\n            max='2022-12-31'\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className='new-expense__actions'>\n        <button type='button' onClick={cancelHandler}>Cancel</button>\n        <button type='submit'>Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n\tconst [bool, setBool] = useState(true);\n\tconst saveDataHandler = (expense) => {\n\t\tconst expenseData = {\n\t\t\t...expense,\n\t\t\tid: Math.random().toString(),\n\t\t};\n\t\tprops.onSaveData(expenseData);\n\t};\n\tconst addExpenseHandler = () => {\n\t\tsetBool(false);\n\t};\n\tconst cancelHandler = () => {\n\t\tsetBool(true);\n\t};\n\tif (!bool) {\n\t\treturn (\n\t\t\t<div className='new-expense'>\n\t\t\t\t<ExpenseForm onCancel={cancelHandler} onSaveData={saveDataHandler} />\n\t\t\t</div>\n\t\t);\n\t}\n\treturn (\n\t\t<div className='new-expense'>\n\t\t\t<button onClick={addExpenseHandler}>Add Expense</button>\n\t\t</div>\n\t);\n};\nexport default NewExpense;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n\tconst dropdownChangeHandler = (event) => {\n\t\tprops.onChangeFilter(event.target.value);\n\t};\n\n\treturn (\n\t\t<div className='expenses-filter'>\n\t\t\t<div className='expenses-filter__control'>\n\t\t\t\t<label>Filter by year</label>\n\t\t\t\t<select value={props.selected} onChange={dropdownChangeHandler}>\n\t\t\t\t\t<option value='2022'>2022</option>\n\t\t\t\t\t<option value='2021'>2021</option>\n\t\t\t\t\t<option value='2020'>2020</option>\n\t\t\t\t\t<option value='2019'>2019</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from 'react';\n\nimport ExpenseDate from './ExpenseDate';\n\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n\n  return (\n    <Card className='expense-item'>\n      <ExpenseDate date={props.date} />\n      <div className='expense-item__description'>\n        <h2>{props.title}</h2>\n        <div className='expense-item__price'>${props.amount}</div>\n      </div>\n      \n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpenseList.css\";\n\nconst ExpenseList = (props) => {\n\tif (props.items.length === 0) {\n\t\treturn <h2 className='expenses-list__fallback'>Expense not found</h2>;\n\t}\n\n\treturn (\n\t\t<li className='expenses-list'>\n\t\t\t{props.items.map((expense) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ExpenseItem\n\t\t\t\t\t\tkey={expense.id}\n\t\t\t\t\t\ttitle={expense.title}\n\t\t\t\t\t\tamount={expense.amount}\n\t\t\t\t\t\tdate={expense.date}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</li>\n\t);\n};\n\nexport default ExpenseList;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n\tlet barFillHeight = \"0%\";\n\n\tif (props.maxValue > 0) {\n\t\tbarFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n\t}\n\n\treturn (\n\t\t<div className='chart-bar'>\n\t\t\t<div className='chart-bar__inner'>\n\t\t\t\t<div\n\t\t\t\t\tclassName='chart-bar__fill'\n\t\t\t\t\tstyle={{ height: barFillHeight }}\n\t\t\t\t></div>\n\t\t\t</div>\n\t\t\t<div className='chart-bar__label'>{props.label}</div>\n\t\t</div>\n\t);\n};\n\nexport default ChartBar;\n","import React from \"react\";\n\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n\tconst dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n\tconst totalMaximum = Math.max(...dataPointValues);\n\n\treturn (\n\t\t<div className='chart'>\n\t\t\t{props.dataPoints.map((dataPoint) => (\n\t\t\t\t<ChartBar\n\t\t\t\t\tkey={dataPoint.label}\n\t\t\t\t\tvalue={dataPoint.value}\n\t\t\t\t\tmaxValue={totalMaximum}\n\t\t\t\t\tlabel={dataPoint.label}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n\tconst chartDataPoints = [\n\t\t{ label: \"Jan\", value: 0 },\n\t\t{ label: \"Feb\", value: 0 },\n\t\t{ label: \"Mar\", value: 0 },\n\t\t{ label: \"Apr\", value: 0 },\n\t\t{ label: \"May\", value: 0 },\n\t\t{ label: \"Jun\", value: 0 },\n\t\t{ label: \"Jul\", value: 0 },\n\t\t{ label: \"Aug\", value: 0 },\n\t\t{ label: \"Sep\", value: 0 },\n\t\t{ label: \"Oct\", value: 0 },\n\t\t{ label: \"Nov\", value: 0 },\n\t\t{ label: \"Dec\", value: 0 },\n\t];\n\n\tfor (const expense of props.expenses) {\n\t\tconst expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\n\t\tchartDataPoints[expenseMonth].value += expense.amount;\n\t}\n\n\treturn <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpenseLists from \"./ExpenseLists\";\nimport ExpenseChart from \"./ExpenseChart\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n\tconst [filteredYear, setFilteredYear] = useState(\"2020\");\n\n\tconst filterChangeHandler = (selectedYear) => {\n\t\tsetFilteredYear(selectedYear);\n\t};\n\n\tconst filteredExpenses = props.items.filter((expense) => {\n\t\treturn expense.date.getFullYear().toString() === filteredYear;\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<Card className='expenses'>\n\t\t\t\t<ExpensesFilter\n\t\t\t\t\tselected={filteredYear}\n\t\t\t\t\tonChangeFilter={filterChangeHandler}\n\t\t\t\t/>\n\t\t\t\t<ExpenseChart expenses={filteredExpenses} />\n\t\t\t\t<ExpenseLists items={filteredExpenses} />\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default Expenses;\n","import React, {useState} from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst dummyExpenses = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(dummyExpenses);\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n  const saveDataHandler =(expenseItem)=>{\n  \n    setExpenses((prevExpenses)=> {return [expenseItem, ...prevExpenses]});\n  };\n\n  return (\n    <div>\n      <NewExpense onSaveData = {saveDataHandler}/>\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}